{"version":3,"sources":["components/Navigation/Menu/Menu.module.scss","components/Navigation/RangeSlider/RangeSlider.module.scss","containers/Frame.module.scss","components/Navigation/Buttons/Buttons.module.scss","components/Navigation/Counter/Counter.module.scss","components/Navigation/Menu/PickMenu/PickItem.module.scss","containers/Layouts/styles/Layouts.module.scss","components/Helpres/Audio.js","hooks/useEventListener.js","hooks/useKeyPress.js","components/Hero/styles/StyledHero.js","components/Hero/Hero.js","components/Obstacle/styles/StyledObstacle.js","components/Obstacle/Obstacle.js","containers/Layouts/styles/StyledGame.js","hooks/useTimer.js","hooks/useTimerGenerator.js","containers/Layouts/GameLayout.js","components/Navigation/Buttons/Button.js","components/Navigation/Buttons/SoundButton.js","components/Navigation/Counter/Counter.js","containers/Layouts/NavigationLayout.js","components/Navigation/Buttons/ResetButton.js","components/Navigation/RangeSlider/RangeSlider.tsx","components/Navigation/RangeSlider/SoundRangeSlider.js","components/Navigation/Buttons/BackButton.js","components/Navigation/Menu/InnerMenu.js","components/Navigation/Menu/StatisticMenu.js","components/Navigation/Menu/PickMenu/PickItem.js","components/Navigation/Menu/PickMenu/PickMenu.js","containers/Layouts/InfoLayout.js","containers/Layouts/MenuLayout.js","hooks/useUnshiftKeyPress.js","containers/Frame.js","settings.js","gameHelper.js","styles/StyledApp.js","hooks/useWindowSize.js","App.js","locations.js","index.js"],"names":["module","exports","Audio","src","id","loop","preload","process","type","useEventListener","fn","action","useEffect","window","addEventListener","removeEventListener","useKeyPress","fnSet","condition","e","dir","key","replace","toLowerCase","hasOwnProperty","preventDefault","sitAnimation","css","props","spritePositions","sprite","sitPositions","keyframes","x","y","sitSteps","jumpAnimation","height","heroSizes","default","h","StyledHero","styled","div","runPositions","runSteps","jump","sit","Hero","heroData","item","gameOnPause","soundMuted","soundVolume","frameWidth","useState","posX","move","size","sizes","heroState","setHeroState","firstLoad","setFirstLoad","touchState","setTouchState","heroDom","useRef","soundMap","soundJump","soundHello","keyActionsMap","keyup","down","newHeroState","updateHeroState","left","right","keydown","up","playSound","setTimeout","getNextPos","touchActionsMap","event","touches","clientY","clientX","state","Object","assign","sound","current","querySelector","play","val","soundEffect","muted","volume","soundArray","push","styles","backgroundImage","width","w","spriteJumpPosition","backgroundPosition","animationPlayState","ref","style","spriteRunPositions","spriteRunSteps","spriteSitPositions","spriteSitSteps","map","index","backgroundSize","compStyle","bgSize","animationRotate","direction","effect","speed","animationAltitude","altitude","altitudeFloat","time","animationMove","selfSpeed","animationSet","name","Obstacle","className","customBgSize","backgroundColor","StyledObstacle","StyledLayer","bgWidth","bgTime","useTimer","generateFn","checkInterval","dependencies","generatorTimer","setInterval","clearInterval","getGenerationTime","generationTimeContainer","Array","isArray","minTime","maxTime","Math","random","useTimerGenerator","generationTimeCont","timeToNextGen","setTimeToNextGen","GameLayout","char","gameHelper","onPauseToggle","environment","difficult","obstacles","nextObstacle","count","obstaclesState","setObstaclesState","selfRef","settings","minTimeDecreaseFunction","generationMinTime","maxTimeDecreaseFunction","generationMaxTime","getRelPosition","objPosition","windowDomRect","getBoundingClientRect","top","bottom","prepareCorrection","correction","objectSize","preparedCorrection","obstaclesToAdd","newObstacle","getRandomObstacle","position","speedFunction","baseSpeed","speedK","rotateSpeed","randomHeight","randomWidth","stackSize","changesFlag","obstaclesToMove","obstacle","display","obstacleDom","obstacleRelPosition","heroRelPosition","heroSizeCorrection","sizeSitCorrection","sizeCorrection","obstacleSizeCorrection","obj2","obj1","relatedWidth","frameHeight","bgNaturalHeight","bgNaturalWidth","selfStyle","bgImage","backgroundAttachment","effectStyle","gameEffects","effects","classes","FilterLayout","StyledGame","Button","valueDefault","valueToggled","onClick","faIcon","toggled","buttonToggled","changeButtonState","classesCss","buttonContent","icon","buttonClickHandler","join","SoundButton","onSoundToggle","faVolumeDown","faVolumeMute","Counter","bestScore","startTime","score","prevTime","setState","currentTime","Date","floor","BestScore","repeat","length","CurrentScore","NavigationLayout","gameState","fullScreen","fullScreenToggle","infoMenuToggle","counterId","MenuButton","faTimes","faBars","pause","lose","VolumeButton","gameStartTime","QuestionButton","faQuestion","infoMenuOpened","FullScreenButton","faExpandArrowsAlt","faCompressArrowsAlt","ResetButton","onResetGame","faUndoAlt","RangeSlider","min","max","step","initValue","onChange","value","setValue","Number","target","onMouseUp","onTouchEnd","SoundRangeSlider","BackButton","onBack","InnerMenu","children","onBackHandler","navigationClasses","menuClasses","navigationClassesWrap","NavigationBlock","menuClassesWrap","MenuModule","MenuContent","StatisticMenu","statistic","scoreData","scoreHistory","split","noGame","ScoreHistory","gameScore","PickMenu","preview","selected","selectHandler","label","previewType","previewImage","PickItem","Selected","Preview","itemClasses","itemData","itemClassesWrap","itemSet","currentIndex","InfoLayout","href","InfoRow","ControlBlock","alt","margin","Credits","faGithub","MenuLayout","game","locationData","menuMode","setMenuMode","currentColonContent","menuContent","resetClasses","BigButton","CurrentColumn","LoseMessage","faPlay","SettingColumn","onSoundVolumeChange","SpeedButton","difficultChangeHandler","SelectButton","fontSize","LocationPickerItem","useUnshiftKeyPress","button","keyPressed","setKeyPressed","Frame","initLocation","savedHeroIndex","windowSize","savedSoundMuted","getSavedNumberVal","savedSoundVolume","savedGameDifficult","useParams","findLocation","defaultVal","savedLocation","localStorage","getItem","isNaN","parseLocation","defaultLocation","set","init","setGameState","getHero","hero","setHero","soundState","setSoundState","currenLocationIndex","setLocation","heroes","setLocationData","fullScreenState","setFullScreenState","gameFrame","resetGame","pauseToggleHandler","soundMutedToggleHandler","includeScoreSet","currentScoreString","scoreHistorySet","splice","updateGameState","newState","getMusic","selector","getScore","dataset","flag","setItem","newScoreString","bgMusic","paused","heroSelectHandler","load","defaultFrameWidth","frameBorder","defaultFrameHeight","border","Wrap","Border","element","document","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","stateToUpd","menuWasPaused","locationSet","getEnvironment","SETTINGS","defaultVerticalMargin","defaultFrameBorder","pathToAssets","anchor","multi","log","locationSoundFolder","defaultLocationPreview","defaultLocationBgSound","defaultLocationBgImage","defaultLocationsMobileBgImage","locationPrototype","bgMobileImage","obstacleFolder","defaultObstacleSprite","obstaclesPrototype","weight","heroFolder","defaultHeroSprite","defaultHeroProps","heroPrototype","gameHelperClass","locations","this","prepareLocationSet","currentLocation","locationName","locationIndex","pathToLocation","obstacleWeights","setWeights","prepareObstacleSet","heroMap","createHeroMap","prepareHeroSet","prepareEnvironment","options","ranges","i","location","previewFile","unpreparedObstacleSet","preparedObstacle","obstacleSpriteFile","spritePath","unpreparedHeroSet","pathToCharsFolder","pathToHeroFolder","preparedHero","attr","attrPath","unpreparedEnv","preparedEnv","mobileCheck","a","check","navigator","userAgent","vendor","opera","test","substr","bgFile","defaultLocationBgMobileImage","bgNaturalMobileWidth","bgNaturalMobileHeight","defFolder","defSoundFile","prepareAltitude","weights","range","getObstacle","heroIndex","indexOf","StyledApp","useWindowSize","undefined","setWindowSize","handleResize","innerWidth","innerHeight","spriteDefaultPosition","App","path","routedApp","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f709fcf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuModule\":\"Menu_MenuModule__1wWwE\",\"MenuContent\":\"Menu_MenuContent__3LsiF\",\"NavigationBlock\":\"Menu_NavigationBlock__Sdmn8\",\"StatisticMenu\":\"Menu_StatisticMenu__15Mvg\",\"BestScore\":\"Menu_BestScore__2xbTA\",\"ScoreHistory\":\"Menu_ScoreHistory__RcHyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SoundRangeSlider\":\"RangeSlider_SoundRangeSlider__3J_9i\",\"SoundButton\":\"RangeSlider_SoundButton__3JsxD\",\"RangeSlider\":\"RangeSlider_RangeSlider__1KlcQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Frame\":\"Frame_Frame__2BHSh\",\"Border\":\"Frame_Border__ud-rX\",\"Wrap\":\"Frame_Wrap__1XsNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Buttons_Button__38EQn\",\"BackButton\":\"Buttons_BackButton__1rN1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BestScore\":\"Counter_BestScore__3UARS\",\"CurrentScore\":\"Counter_CurrentScore__1J_pm\",\"Counter\":\"Counter_Counter__1SCcW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PickItem\":\"PickItem_PickItem__Grecv\",\"Selected\":\"PickItem_Selected__1UY6T\",\"Preview\":\"PickItem_Preview__1fxwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameLayout\":\"Layouts_GameLayout__1mkTq\",\"FilterLayout\":\"Layouts_FilterLayout__1khI7\",\"NavigationLayout\":\"Layouts_NavigationLayout__3UTCv\",\"MenuButton\":\"Layouts_MenuButton__3Le4Z\",\"QuestionButton\":\"Layouts_QuestionButton__1ZUwW\",\"FullScreenButton\":\"Layouts_FullScreenButton__hBP-_\",\"VolumeButton\":\"Layouts_VolumeButton__30RsN\",\"MenuLayout\":\"Layouts_MenuLayout__mqHMj\",\"MenuContent\":\"Layouts_MenuContent__1ctcq\",\"CurrentColumn\":\"Layouts_CurrentColumn__7NUae\",\"BigButton\":\"Layouts_BigButton__1n0c3\",\"ResetButton\":\"Layouts_ResetButton__2uTgv\",\"rotation\":\"Layouts_rotation__1RiPS\",\"LoseMessage\":\"Layouts_LoseMessage__1zuTl\",\"SettingColumn\":\"Layouts_SettingColumn__1lEeY\",\"SelectButton\":\"Layouts_SelectButton__1-uhx\",\"InfoLayout\":\"Layouts_InfoLayout__1_Gqd\",\"InfoRow\":\"Layouts_InfoRow__UNOq6\",\"ControlBlock\":\"Layouts_ControlBlock__355eh\",\"Credits\":\"Layouts_Credits__3EOgm\",\"LocationPickerItem\":\"Layouts_LocationPickerItem__2_llD\",\"SpeedButton\":\"Layouts_SpeedButton__3k25D\"};","import React from 'react'\n\nexport default function Audio({src, id, loop}) {\n\n    return (\n        <audio id={id} preload={\"auto\"} loop={loop || false}>\n            <source src={process.env.PUBLIC_URL + src} type={\"audio/mp3\"} />\n        </audio>\n    )\n}","import {useEffect} from 'react'\n\nexport default function useEventListener(fn, action){\n    useEffect(() => {\n        window.addEventListener(action, fn);\n        return () => window.removeEventListener(action, fn);\n    },[fn, action])\n}","import useEventListener from './useEventListener'\n\n\nexport default function useKeyPress(fnSet, action, condition = true) {\n\n    useEventListener((e) => {\n        if (condition) {\n            let dir = e.key.replace(\"Arrow\", \"\").toLowerCase()\n            dir = dir === \" \"? \"SPACE\" : dir;\n            if (fnSet.hasOwnProperty(dir)) {\n                fnSet[dir]();\n                e.preventDefault();\n            }\n        }\n    }, [action])\n}","import styled, {css, keyframes} from 'styled-components'\n\nconst animMove = (spritePositions) => keyframes`\n  0%{\n    background-position: -${spritePositions[0].x}px -${spritePositions[0].y}px;\n  }\n  100%{\n    background-position: -${spritePositions[1].x}px -${spritePositions[1].y}px;\n  } \n`\n\nconst animSitMove = (spritePositions) => keyframes`\n  0%{\n    background-position: -${spritePositions[0].x}px -${spritePositions[0].y}px;\n  }\n  100%{\n    background-position: -${spritePositions[1].x}px -${spritePositions[1].y}px;\n  }\n`\n\nconst jump = (height) => keyframes`\n  0%, 100%{\n    bottom: 0;\n  }\n  50%{\n    bottom: ${height * 2}px;\n  }\n`\n\nconst sitAnimation = css`\n  animation: ${props => animSitMove(props.sprite.sitPositions)} 0.3s steps(${props => props.sprite.sitSteps}) infinite\n`\n\nconst jumpAnimation = css`\n  animation: ${props => jump(props.heroSizes.default.h)} ${0.75 * 1.5}s cubic-bezier(0.310, 0.440, 0.445, 1.050)\n`\n\nconst StyledHero = styled.div` \n\n  background-repeat: no-repeat;\n  position: absolute;\n  bottom: 0;\n  z-index: 20;\n  -webkit-animation: ${props => animMove(props.sprite.runPositions)} .3s steps(${props => props.sprite.runSteps}) infinite;\n  background-position-y: 0;  \n\n  ${props => props.jump ? jumpAnimation : null};\n  ${props => props.sit ? sitAnimation : null};\n    \n`\n\nexport default StyledHero\n","import React, {useEffect, useRef, useState} from 'react'\nimport useKeyPress from \"../../hooks/useKeyPress\";\nimport StyledHero from \"./styles/StyledHero\";\nimport Audio from \"../Helpres/Audio\";\nimport useEventListener from \"../../hooks/useEventListener\";\n\nconst Hero = ({item: heroData, gameOnPause, soundMuted, soundVolume, frameWidth}) => {\n\n\n\n    const [heroState, setHeroState] = useState({\n        posX: 0,\n        move: 'stand', //stand, run, jump, sit\n        size: heroData.sizes.default\n    });\n    const [firstLoad, setFirstLoad] = useState(true)\n    const [touchState, setTouchState] = useState('done')\n    const heroDom = useRef(null);\n\n    //redundant\n    const soundMap = {\n        soundJump: \"jump-music\",\n        soundHello: \"hello-music\"\n    }\n\n    const keyActionsMap = {\n        keyup: {\n            down: () => {\n                if (heroState.move === 'sit') {\n                    const newHeroState = {\n                        move: 'stand',\n                        size: heroData.sizes.default\n                    }\n                    updateHeroState(newHeroState)\n                }\n            },\n            left: () => {\n                if (heroState.move === 'run') {\n                    updateHeroState({move: 'stand'})\n                }\n            },\n            right: () => {\n                if (heroState.move === 'run') {\n                    updateHeroState({move: 'stand'})\n                }\n            },\n        },\n        keydown: {\n            down: () => {\n                if (heroState.move !== 'jump' && heroState.move !== 'sit') {\n                    const newHeroState = {\n                        move: 'sit',\n                        size: heroData.sizes.sit\n                    }\n                    updateHeroState(newHeroState)\n                }\n            },\n            up: () => {\n                if (heroState.move !== 'jump' && heroState.move !== 'sit') {\n                    playSound(\"soundJump\");\n                    updateHeroState({move: 'jump'})\n                    setTimeout(() => {\n                        updateHeroState({move: 'stand'})\n                    }, 700 * 1.4 - 200)\n                }\n            },\n            left: () => {\n                if (heroState.move !== 'jump' && heroState.move !== 'sit') {\n                    const newHeroState = {\n                        move: 'run',\n                        posX: getNextPos(-5)\n                    }\n                    updateHeroState(newHeroState)\n                }\n            },\n            right: () => {\n                if (heroState.move !== 'jump' && heroState.move !== 'sit') {\n                    const newHeroState = {\n                        move: 'run',\n                        posX: getNextPos(5)\n                    }\n                    updateHeroState(newHeroState)\n                }\n            },\n        }\n    }\n\n    const touchActionsMap = {\n        touchStart: (event) => {\n            if (!gameOnPause) {\n                setTouchState({y: event.touches[0].clientY, x: event.touches[0].clientX})\n            }\n        },\n\n        touchMove: (event) => {\n            if (!gameOnPause && touchState !== \"done\") {\n                if (heroState.move !== \"sit\" && touchState.y - event.touches[0].clientY > 100) {\n                    keyActionsMap.keydown.up()\n                    setTouchState(\"done\")\n                } else if (heroState.move !== \"sit\" && touchState.y - event.touches[0].clientY < -100) {\n                    keyActionsMap.keydown.down()\n                    setTouchState(\"done\")\n                } else if (heroState.move !== \"sit\" && heroState.move !== \"jump\") {\n                    if (touchState.x - event.touches[0].clientX < -100) {\n                        keyActionsMap.keydown.right()\n                    } else if (touchState.x - event.touches[0].clientX > 100) {\n                        keyActionsMap.keydown.left()\n                    }\n                }\n            }\n        },\n\n        touchEnd: () => {\n            if (!gameOnPause) {\n                if (heroState.move === \"sit\") {\n                    keyActionsMap.keyup.down()\n                } else if (heroState.move === \"run\") {\n                    updateHeroState({move: 'stand'})\n                }\n            }\n        }\n    }\n\n    const updateHeroState = (state) => {\n        setHeroState(Object.assign({}, heroState, state));\n    }\n\n    const playSound = (sound) => {\n        if (heroData[sound]) {\n            heroDom.current.querySelector(`audio#${soundMap[sound]}`).play();\n        }\n    }\n\n    const getNextPos = (val) => {\n        if (heroState.posX + val > frameWidth) {\n            return 0\n        } else if (heroState.posX + val < 0) {\n            return frameWidth\n        } else {\n            return heroState.posX + val\n        }\n    }\n\n    useKeyPress(keyActionsMap.keydown, \"keydown\", !gameOnPause)\n    useKeyPress(keyActionsMap.keyup, \"keyup\")\n    useEventListener(touchActionsMap.touchStart, \"touchstart\")\n    useEventListener(touchActionsMap.touchMove, \"touchmove\")\n    useEventListener(touchActionsMap.touchEnd, \"touchend\")\n\n    useEffect(() => {\n        for (let sound in soundMap) {\n            if (heroData[sound]) {\n                const soundEffect = heroDom.current.querySelector(`audio#${soundMap[sound]}`);\n                soundEffect.muted = soundMuted;\n                soundEffect.volume = soundVolume / 100;\n            }\n        }\n    }, [heroData, soundMuted, soundVolume])\n\n    useEffect(() => {\n        updateHeroState({\n            size: heroData.sizes.default\n        })\n    }, [heroData])\n\n    useEffect(() => {\n        if (!gameOnPause && firstLoad) {\n            playSound(\"soundHello\");\n            setFirstLoad(false);\n        }\n    }, [gameOnPause])\n\n    const soundArray = []\n    for (let sound in soundMap) {\n        if (heroData[sound]) {\n            soundArray.push({\n                id: soundMap[sound],\n                src: heroData[sound]\n            })\n        }\n    }\n\n    const styles = {\n        backgroundImage: `url(${process.env.PUBLIC_URL + heroData.sprite})`,\n        left: `${heroState.posX}px`,\n        height: `${heroState.size.h}px`,\n        width: `${heroState.size.w}px`\n    }\n\n    if (heroState.move === 'jump' && heroData.spriteJumpPosition) {\n        styles.backgroundPosition = `-${heroData.spriteJumpPosition.x}px -${heroData.spriteJumpPosition.y}px`\n    }\n\n    if (gameOnPause) styles.animationPlayState = 'paused';\n\n    return (\n        <StyledHero\n            id={'hero'}\n            ref={heroDom}\n            style={styles}\n            jump={heroState.move === 'jump'}\n            sit={heroState.move === 'sit'}\n            sprite={{\n                runPositions : heroData.spriteRunPositions,\n                runSteps : heroData.spriteRunSteps,\n                sitPositions : heroData.spriteSitPositions,\n                sitSteps : heroData.spriteSitSteps,\n            }}\n            heroSizes={heroData.sizes} //only for calculation jump height, so there is no need in current size\n        >\n            {\n                soundArray.map((sound, index) => {\n                    return (\n                        <Audio\n                            key={sound.id + index}\n                            id={sound.id}\n                            src={sound.src}\n                        />\n                    )\n                })\n            }\n        </StyledHero>\n    )\n}\n\n\nexport default Hero;","import styled, {css, keyframes} from 'styled-components'\n\n//TODO: create style components\n// Example:\n//     const Component = styled.div.attrs(props => ({\n//             style: {\n//                 background: props.background,\n//             },\n//         }))`width: 100%;`\n//\n//         <Component />\n\n\n\nfunction getScale(width){\n    if(width > 600) {\n        return 600/width\n    }\n    return 1\n}\n\nconst move = (frameWidth) => keyframes`\n  0%{\n    left: ${frameWidth}px;\n  }\n  100%{\n    left: -200px;\n  }\n`\nconst rotation = (direction) => keyframes`\n  100%{\n    transform: rotate(${direction? direction * 360 : (-1) * 360}deg);\n  }\n`\n\nconst altitude = (altitude, altitudeFloat) => keyframes`\n  0%,100%{\n    bottom: ${altitude}px;\n  }\n  25%{\n    bottom: ${altitude + altitudeFloat[0]}px;\n  }\n  75%{\n    bottom: ${altitude + altitudeFloat[1]}px;\n  }\n`\n\nconst backgroundSize = css`\n  background-size: ${props => (function (props) {\n    if (props.compStyle.bgSize) {\n        if (props.compStyle.bgSize === \"auto\") {\n\n            return `${props.compStyle.w}px ${props.compStyle.h}px`\n        }\n        return props.compStyle.bgSize\n    }\n    return 'cover'\n})(props)}\n`\n\nconst animationRotate = css`\n,${props => rotation(props.effect.direction)} ${props => props.effect.speed? props.effect.speed : 0.4}s linear infinite\n`\n\nconst animationAltitude = css`\n,${props => altitude(props.compStyle.altitude, props.effect.altitude)} ${props => props.effect.time? props.effect.time : 4}s linear infinite\n`\n\nconst animationMove = css`\n${props => move(props.frameWidth)} ${props => props.frameWidth/props.selfSpeed * getScale(props.frameWidth) + 0.3}s linear\n`\nconst animationSet = css`\nanimation: ${animationMove}${props => props.effect.name === \"rotate\" ? animationRotate : null}\n${props => props.effect.name === \"altitude\" ? animationAltitude : null}\n`\n\nexport default styled.div`\n\n  ${backgroundSize};\n  width: ${props => props.compStyle.w}px;\n  height: ${props => props.compStyle.h}px;\n  bottom: ${props => props.compStyle.altitude}px;\n  position: absolute;\n  ${animationSet};\n  left: -100px;\n  z-index: 19;\n  \n  @keyframes move {\n \n`","import React from 'react'\nimport StyledObstacle from './styles/StyledObstacle'\n\nconst Obstacle = ({item, index, className, gameOnPause, frameWidth}) => {\n\n    const {\n        speed,\n        width,\n        height,\n        altitude,\n        sprite,\n        effect\n    } = item;\n\n    const compStyle = {\n        w: width,\n        h: height,\n        altitude: altitude || 0,\n        bgSize: item.customBgSize,\n        sprite: sprite,\n    }\n\n    const style = {}\n    if (sprite) style.backgroundImage = `url(${process.env.PUBLIC_URL + \"/\" + sprite})`;\n    else style.backgroundColor = 'red'\n    if (gameOnPause) style.animationPlayState = 'paused';\n\n    return (\n        <StyledObstacle\n            effect={effect}\n            compStyle={compStyle}\n            style={style}\n            frameWidth={frameWidth}\n            selfSpeed={speed}\n            className={className}\n            data-index={index}\n        />\n    )\n}\n\nexport default Obstacle;","import styled, { keyframes } from \"styled-components\"\n\nconst bgMove = (width) => keyframes`\n  0%{\n    background-position: 0 0;\n  }\n  100%{\n    background-position: -${width}px 0;\n  }\n`\n\nconst party = () => keyframes`\n 0%{\n background-color: rgba(243,61,255,0.3);\n }\n 20%{\n background-color: rgba(255,255,23,0.3);\n }\n 40%{\n background-color: rgba(38,65,255,0.3);\n }\n 60%{\n background-color: rgba(255,49,17,0.3);\n }\n 80%{\n background-color: rgba(255,255,255,0.3);\n }\n 100%{\n background-color: rgba(47, 255, 75, 0.3);\n }\n`\nexport const StyledLayer = styled.div`\nanimation: ${party} 10s steps(6) infinite;\n`\n\nexport default styled.div`\n\n  position: absolute;\n  animation: ${props => bgMove(props.bgWidth)} ${props => props.bgTime}s linear infinite;\n \n`\n\n","import {useEffect} from 'react'\n\n\nexport default function useTimer(generateFn, checkInterval  = 50, condition = true, ...dependencies) {\n    useEffect(() => {\n        if(condition){\n            const generatorTimer = setInterval(() => {\n                generateFn()\n            }, checkInterval)\n            return (() => clearInterval(generatorTimer));\n        }\n    }, [...dependencies])\n}\n\n","import {useState} from 'react';\nimport useTimer from \"./useTimer\";\n\n//useTimerGenerator - is a shell for useTimer\n//that generate some action in period generationTimeCont\n//generationTimeCont might to be an array or a number, is array - generation time will be given randomly between min and max values in array\n\n//useTimer firs arg - function to call\n//checkInterval - how often timer will call\n//condition - condition that have to performed for start timer\n//timeToNextGen and condition - vars that hook will hanging on\n//\n\nfunction getGenerationTime(generationTimeContainer){\n    if(Array.isArray(generationTimeContainer)){\n        const minTime = generationTimeContainer[0];\n        const maxTime = generationTimeContainer[1];\n        return minTime + Math.random() * (maxTime - minTime)\n    }\n    return generationTimeContainer\n}\n\n\nconst useTimerGenerator = (fn, generationTimeCont, condition, checkInterval = 250) => {\n\n    const [timeToNextGen, setTimeToNextGen] = useState(getGenerationTime(generationTimeCont))\n    useTimer(() => {\n        if (timeToNextGen <= 0) {\n            setTimeToNextGen(getGenerationTime(generationTimeCont))\n            fn()\n        } else {\n            setTimeToNextGen(timeToNextGen - checkInterval)\n        }\n    }, checkInterval, condition, timeToNextGen, condition)\n}\n\nexport default useTimerGenerator","import React, { useRef, useState } from \"react\"\nimport classes from \"./styles/Layouts.module.scss\"\nimport Hero from \"../../components/Hero/Hero\"\nimport Obstacle from \"../../components/Obstacle/Obstacle\"\nimport StyledGame, { StyledLayer } from \"./styles/StyledGame\"\nimport useTimerGenerator from \"../../hooks/useTimerGenerator\"\nimport useTimer from \"../../hooks/useTimer\"\n\n\nconst GameLayout = (props) => {\n\n    const {\n        char,\n        gameHelper,\n        onPauseToggle,\n        gameOnPause,\n        environment,\n        soundVolume,\n        soundMuted,\n        difficult\n    } = props\n\n    const stackSize = 8;\n    const [obstaclesState, setObstaclesState] = useState({\n        obstacles: Array(stackSize),\n        nextObstacle: 0,\n        count: 0\n    })\n    const selfRef = useRef(null)\n\n\n    const minTime = gameHelper.settings.minTimeDecreaseFunction(\n        gameHelper.settings.generationMinTime,\n        obstaclesState.count + difficult<3 ? 0 : difficult/2 * 90)\n\n    const maxTime = gameHelper.settings.maxTimeDecreaseFunction(\n        gameHelper.settings.generationMaxTime,\n        obstaclesState.count + difficult<3 ? 0 : difficult/2 * 180)\n\n    function getRelPosition(objPosition) {\n        const windowDomRect = selfRef.current.getBoundingClientRect();\n        return {\n            left: objPosition.left - windowDomRect.left,\n            right: objPosition.right - windowDomRect.left,\n            top: windowDomRect.bottom - objPosition.top,\n            bottom: windowDomRect.bottom - objPosition.bottom\n        }\n    }\n\n    function prepareCorrection(correction, objectSize) {\n\n        const preparedCorrection = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n        }\n        if (typeof correction === \"number\") {\n            preparedCorrection.top = objectSize.h * correction;\n            preparedCorrection.bottom = objectSize.h * correction;\n            preparedCorrection.right = objectSize.w * correction;\n            preparedCorrection.left = objectSize.w * correction;\n        } else if (typeof correction === \"object\") {\n            preparedCorrection.top = objectSize.h * correction.top;\n            preparedCorrection.bottom = objectSize.h * correction.bottom;\n            preparedCorrection.right = objectSize.w * correction.right;\n            preparedCorrection.left = objectSize.w * correction.left;\n        }\n        return preparedCorrection\n    }\n\n    function checkCollision(obj1, obj2, correction) {\n\n        //THIS FUNCTION WILL WORK ONLY WITH RELATED VALUES\n\n        const rightCross = obj1.right - correction[0].right > obj2.left + correction[1].left;\n        const leftCross = obj1.left + correction[0].left < obj2.right - correction[1].right;\n        const topCross = obj1.top - correction[0].top > obj2.bottom + correction[1].bottom;\n        const bottomCross = obj1.bottom + correction[0].bottom < obj2.top - correction[1].top;\n        return rightCross & leftCross & topCross & bottomCross\n    }\n\n//OBSTACLES GENERATION\n\n    useTimerGenerator(() => {\n        const obstaclesToAdd = [...obstaclesState.obstacles];\n        const newObstacle = gameHelper.getRandomObstacle()\n        newObstacle.position = gameHelper.settings.frameWidth // set start position\n        newObstacle.speed = gameHelper.settings.speedFunction(gameHelper.settings.baseSpeed, obstaclesState.count)\n        newObstacle.speed = newObstacle.speed * newObstacle.speedK * difficult / 2\n        if(newObstacle.effect?.name === \"rotate\"){\n            newObstacle.effect = Object.assign({},newObstacle.effect)\n            if(newObstacle.effect.speed){\n                const rotateSpeed = newObstacle.effect.speed;\n                if(Array.isArray(rotateSpeed))\n                    newObstacle.effect.speed = rotateSpeed[0] + Math.random() * (rotateSpeed[1] - rotateSpeed[0])\n                else newObstacle.effect.speed = rotateSpeed\n            } else newObstacle.effect.speed = false\n            if(newObstacle.effect.direction === \"rand\"){\n                newObstacle.effect.direction = Math.random() < 0.5 ? 1 : -1\n            }\n        }\n        if (newObstacle.randomHeight)\n            newObstacle.height = newObstacle.height - newObstacle.height * Math.random() * newObstacle.randomHeight\n        if (newObstacle.randomWidth)\n            newObstacle.width = newObstacle.width + newObstacle.width * Math.random() * newObstacle.randomWidth\n        obstaclesToAdd[obstaclesState.nextObstacle] = newObstacle;\n        setObstaclesState({\n            obstacles: obstaclesToAdd,\n            nextObstacle: obstaclesState.nextObstacle < stackSize - 1 ? obstaclesState.nextObstacle + 1 : 0,\n            count: obstaclesState.count+1\n        });\n    }, [minTime, maxTime], !gameOnPause)\n\n\n//OBSTACLES LIFECYCLE\n\n    useTimer(() => {\n        let changesFlag = false;\n        const obstaclesToMove = obstaclesState.obstacles.map((obstacle, index) => {\n            if (obstacle?.display) {\n                const obstacleDom = selfRef.current.querySelector(`[data-index = \"${index}\"]`)\n                const heroDom = selfRef.current.querySelector('#hero')\n                const obstacleRelPosition = getRelPosition(obstacleDom.getBoundingClientRect());\n                if (obstacleRelPosition.left <= -150) {\n                    obstacle.display = false;\n                    changesFlag = true;\n                } else {\n                    const heroRelPosition = getRelPosition(heroDom.getBoundingClientRect());\n                    let heroSizeCorrection = null\n\n                    //Check if hero on sitState\n                    //If hero on sitState so we use Correction fo sit\n                    //top+5 cause real size is little less then that settled in settings\n                    //If not - correction for standState\n                    if(heroRelPosition.top+5 < char.sizes.default.h){\n                        heroSizeCorrection = prepareCorrection(char.sizeSitCorrection,\n                            {w: char.sizes.sit.w, h: char.sizes.sit.h})\n                    } else {\n                        heroSizeCorrection = prepareCorrection(char.sizeCorrection,\n                            {w: char.sizes.default.w, h: char.sizes.default.h})\n                    }\n                    const obstacleSizeCorrection = prepareCorrection(obstacle.sizeCorrection,\n                        {w: obstacle.width, h: obstacle.height})\n                    if (checkCollision(heroRelPosition, obstacleRelPosition, [heroSizeCorrection, obstacleSizeCorrection])) {\n                        onPauseToggle(\"lose\")\n                        changesFlag = true;\n                    }\n                }\n            }\n            return obstacle\n        })\n        if (changesFlag) {\n            setObstaclesState({\n                obstacles: obstaclesToMove,\n                nextObstacle: obstaclesState.nextObstacle,\n                count: obstaclesState.count\n            })\n        }\n    }, 40, !gameOnPause, obstaclesState, gameOnPause)\n\n//RENDERS PREPARE\n\n    let relatedWidth = gameHelper.settings.frameHeight / environment.bgNaturalHeight * environment.bgNaturalWidth;\n    if (relatedWidth < gameHelper.settings.frameWidth) {\n        relatedWidth = gameHelper.settings.frameWidth\n    }\n\n    const divider = gameHelper.settings.frameWidth < gameHelper.settings.frameHeight?\n        gameHelper.settings.frameHeight : gameHelper.settings.frameWidth\n    const bgTime = relatedWidth / divider * 3\n\n    const selfStyle = {\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/\" + environment.bgImage})`,\n        backgroundSize: `${relatedWidth}px ${gameHelper.settings.frameHeight}px`,\n        backgroundAttachment: 'initial',\n}\n\n    const effectStyle = {}\n    if (gameOnPause) {\n        selfStyle.animationPlayState = \"paused\";\n        effectStyle.animationPlayState = \"paused\";\n    }\n\n    let gameEffects = null\n    switch (environment.effects) {\n        case \"disco\":\n            gameEffects =\n                <StyledLayer className={classes.FilterLayout} style={effectStyle}/>\n            break\n        default:\n            gameEffects = null\n            break\n    }\n\n\n\n    return (\n        <StyledGame\n            bgWidth={relatedWidth}\n            bgTime={bgTime}\n            ref={selfRef}\n            style={selfStyle}\n            className={classes.GameLayout}>\n\n            <Hero\n                frameWidth={gameHelper.settings.frameWidth}\n                soundVolume={soundVolume}\n                soundMuted={soundMuted}\n                gameOnPause={gameOnPause}\n                item={char}\n                settings={gameHelper.settings}\n            />\n\n            {\n                obstaclesState.obstacles.map((obstacle, index) => {\n                    if (obstacle?.display) {\n                        return (\n                            <Obstacle\n                                frameWidth={gameHelper.settings.frameWidth}\n                                gameOnPause={gameOnPause}\n                                className={\"obstacle\"}\n                                key={index}\n                                index={index}\n                                item={obstacle}\n                            />\n                        )\n                    }\n                    return null\n                })\n            }\n\n            {gameEffects}\n        </StyledGame>\n    )\n}\n\nexport default GameLayout;","import React, {useEffect, useState} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport classesCss from \"./Buttons.module.scss\";\n\n\n/*\n    iconDefault - default image of Button\n    iconToggled - toggled image of Button\n    faIcon - if set iconDefault will read as FontAwesome icon\n    className - extended classes for button\n    onCLick - callback function\n */\n\nfunction Button(props) {\n\n    const {\n        condition, //condition under which onClick will work\n        valueDefault,\n        valueToggled,\n        className,\n        onClick,\n        style,\n        faIcon = false\n    } = props\n    const toggled = props.toggled? props.toggled : false;\n\n    const [buttonToggled, changeButtonState] = useState(toggled)\n\n    const classes = [classesCss.Button]\n    classes.push(className)\n\n    let buttonContent = valueToggled ? buttonToggled ? valueDefault : valueToggled : valueDefault;\n\n    if (faIcon) {\n        buttonContent = <FontAwesomeIcon icon={buttonContent}/>\n    }\n\n    const buttonClickHandler = () => {\n        if(condition ?? true){\n            if(onClick) onClick()\n            if(valueToggled) changeButtonState(!buttonToggled)\n        }\n    }\n\n    useEffect(() => {\n        changeButtonState(toggled)\n    }, [toggled])\n\n    return (\n        <div\n            style={style}\n            className={classes.join(\" \")}\n            onClick={() => buttonClickHandler()}\n        >\n            {buttonContent}\n        </div>\n    )\n}\n\nexport default Button\n","import React from 'react'\nimport Button from \"./Button\";\nimport {faVolumeDown, faVolumeMute} from '@fortawesome/free-solid-svg-icons'\n\nexport default function SoundButton({onSoundToggle, soundMuted, className}){\n\n    return(\n        <Button\n            onClick = {onSoundToggle}\n            className={className}\n            valueDefault = {faVolumeDown}\n            valueToggled = {faVolumeMute}\n            faIcon = {true}\n            toggled = {!soundMuted}\n        />\n    )\n}","import React, {useEffect, useState} from 'react'\nimport useTimer from \"../../../hooks/useTimer\";\nimport classesCss from './Counter.module.scss'\n\nconst Counter = (props) => {\n\n\n    //TODO: replace with hook\n    const {\n        bestScore,\n        startTime,\n        condition,\n        id,\n        className} = props;\n\n    const [state, setState] = useState({\n        score: 0,\n        prevTime: startTime\n    });\n\n    const classes = [classesCss.Counter]\n    classes.push(className)\n\n    useTimer(() => {\n        const currentTime = new Date();\n        setState({\n            score: Math.floor((currentTime - state.prevTime)/40) + state.score,\n            prevTime: currentTime\n        })\n    }, 40, !condition, condition, state.score)\n\n    useTimer(() => {\n        const currentTime = new Date();\n        setState({\n            score: state.score,\n            prevTime: currentTime\n        })\n    }, 40, condition, condition)\n\n    useEffect(() => {\n        setState({\n            score: 0,\n            prevTime: startTime\n        })\n    }, [startTime])\n\n\n\n\n    return(\n        <div id={id} data-score = {state.score} className = {classes.join(\" \")}>\n            <span className ={classesCss.BestScore}>{'0'.repeat(8 - (bestScore + '').length) + bestScore}</span>\n            \\<span className ={classesCss.CurrentScore}>{'0'.repeat(8 - (state.score + '').length) + state.score}</span>\n        </div>\n    )\n}\n\nexport default Counter","import React from 'react'\nimport classes from './styles/Layouts.module.scss'\nimport '../../styles/styles.scss'\nimport {faBars, faCompressArrowsAlt, faExpandArrowsAlt, faQuestion, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport Button from \"../../components/Navigation/Buttons/Button\";\nimport SoundButton from \"../../components/Navigation/Buttons/SoundButton\";\nimport Counter from \"../../components/Navigation/Counter/Counter\";\n\nconst NavigationLayout = (props) => {\n\n    const {\n        gameState,\n        onPauseToggle,\n        onSoundToggle,\n        soundMuted,\n        fullScreen,\n        fullScreenToggle,\n        infoMenuToggle,\n        bestScore,\n        counterId\n    } = props\n\n    return (\n\n        <div className={classes.NavigationLayout}>\n            <Button\n                onClick={onPauseToggle}\n                className={classes.MenuButton}\n                valueDefault={faTimes}\n                valueToggled={faBars}\n                faIcon={true}\n                toggled={gameState.pause}\n                condition={!gameState.lose}\n            />\n            <SoundButton\n                onSoundToggle={onSoundToggle}\n                className={[classes.MenuButton, classes.VolumeButton].join(\" \")}\n                soundMuted={soundMuted}\n            />\n\n            <Counter\n                className={\"counter\"}\n                bestScore={bestScore}\n                startTime={gameState.gameStartTime}\n                condition={gameState.pause}\n                id = {counterId}\n            />\n\n            <Button\n                onClick={infoMenuToggle}\n                className={[classes.MenuButton, classes.QuestionButton].join(\" \")}\n                valueDefault={faQuestion}\n                valueToggled={faTimes}\n                faIcon={true}\n                toggled={!gameState.infoMenuOpened}\n            />\n\n            <Button\n                onClick={fullScreenToggle}\n                className={[classes.MenuButton, classes.FullScreenButton].join(\" \")}\n                valueDefault={faExpandArrowsAlt}\n                valueToggled={faCompressArrowsAlt}\n                faIcon={true}\n                toggled={!fullScreen}\n            />\n        </div>\n    )\n}\n\nexport default NavigationLayout","import React from 'react'\nimport Button from \"./Button\";\nimport {faUndoAlt} from '@fortawesome/free-solid-svg-icons'\n\nexport default function ResetButton({onResetGame, className}){\n    return(\n        <Button\n            onClick={() => onResetGame()}\n            className={className}\n            valueDefault={faUndoAlt}\n            faIcon={true}\n        />\n    )\n}","import React, {useState} from 'react'\nimport classesCss from './RangeSlider.module.scss'\n\ntype RangeSliderProps = {\n    initValue: number\n    classes?: string\n    min?: number\n    max?: number\n    step?: number\n    onChange(val: number): void\n}\n\nconst RangeSlider: React.FC<RangeSliderProps> = (props) => {\n    const min: number = props.min || 0;\n    const max: number = props.max || 100;\n    const step: number = props.step || 1;\n    const initValue: number = props.initValue || Math.floor(min + max/2);\n    const onChange = props.onChange\n\n    const [value, setValue] = useState<number>(initValue)\n\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(Number(event.target.value))\n    }\n\n    return(\n            <input\n                type = {\"range\"}\n                step = {step}\n                min = {min}\n                max = {max}\n                value = {value}\n                onChange={changeHandler}\n                onMouseUp={() => onChange(value)}\n                onTouchEnd={() => onChange(value)}\n                className={classesCss.RangeSlider}\n            />)\n}\n\nexport default RangeSlider","import React from 'react'\nimport SoundButton from \"../Buttons/SoundButton\";\nimport classesCss from \"./RangeSlider.module.scss\"\nimport RangeSlider from './RangeSlider'\n\nexport default function SoundRangeSlider({onChange, onSoundToggle, soundMuted, initValue}) {\n\n    return (\n        <div className={classesCss.SoundRangeSlider}>\n            <SoundButton\n                onSoundToggle={onSoundToggle}\n                soundMuted={soundMuted}\n                className={classesCss.SoundButton}/>\n            <RangeSlider\n                initValue = {initValue}\n                onChange={onChange}\n            />\n        </div>\n    );\n}","import React from 'react'\nimport Button from \"./Button\";\nimport classes from \"./Buttons.module.scss\"\n\nexport default function BackButton({onBack, className}){\n\n    return(\n        <Button\n            onClick = {onBack}\n            className={[classes.BackButton, className].join(\" \")}\n            valueDefault={\"BACK\"}\n        />\n    )\n}","import React from 'react'\nimport BackButton from \"../Buttons/BackButton\";\nimport classesCss from \"./Menu.module.scss\"\n\nexport default function InnerMenu({children, onBackHandler, navigationClasses, menuClasses}) {\n\n    const navigationClassesWrap = [classesCss.NavigationBlock];\n    navigationClassesWrap.push(navigationClasses)\n\n    const menuClassesWrap = [classesCss.MenuModule];\n    menuClassesWrap.push(menuClasses)\n\n    return(\n        <div className={menuClassesWrap.join(\" \")}>\n            <div className={classesCss.MenuContent}>\n                {children}\n            </div>\n            <div className={navigationClassesWrap.join(\" \")}>\n                <BackButton onBack={onBackHandler}/>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport InnerMenu from \"./InnerMenu\";\nimport classesCss from \"./Menu.module.scss\"\n\nexport default function StatisticMenu({onBackHandler, statistic}) {\n\n    const scoreData = {\n\n    }\n    if (statistic.scoreHistory) {\n        if (typeof statistic.scoreHistory === \"string\") {\n            statistic.scoreHistory = statistic.scoreHistory.split(\",\");\n        }\n        scoreData.bestScore = '0'.repeat(8 - (statistic.bestScore + '').length) + statistic.bestScore\n        scoreData.scoreHistory = statistic.scoreHistory.map((score) => {\n            return '0'.repeat(8 - (score + '').length) + score\n        })\n    } else {\n        scoreData.noGame = \"No one game played yet\"\n    }\n\n    return (\n        <InnerMenu\n            menuClasses={classesCss.StatisticMenu}\n            onBackHandler={onBackHandler}\n        >\n            {scoreData.bestScore ?\n                <div className={classesCss.BestScore}>BEST SCORE: {scoreData.bestScore}</div> : null\n            }\n            <div  className={classesCss.ScoreHistory}>\n            {scoreData.scoreHistory ?\n\n                scoreData.scoreHistory.map((gameScore, index) => {\n                    return <div key={\"scoreValue\"+index}>{index+1}{'.'.repeat(35 - ((index+1 + \"\").length)*3)}{gameScore}</div>\n                })\n                :<div>{scoreData.noGame}</div>\n            }\n            </div>\n        </InnerMenu>\n    )\n}","import React from 'react'\nimport classesCss from './PickItem.module.scss'\n\nexport default function PickMenu(props){\n\n    const {\n        preview,\n        selected,\n        selectHandler,\n        className,\n        label,\n        previewType\n        } = props;\n\n    const previewImage = {backgroundImage : `url(${process.env.PUBLIC_URL + preview})`}\n\n    const onClickHandler = () => {\n        if(!selected) selectHandler()\n    }\n\n    const classes = [classesCss.PickItem];\n    classes.push(className);\n    if(selected) classes.push(classesCss.Selected, \"selected\")\n\n    return(\n        <div\n            style={previewType === \"full\"? previewImage : null}\n            onClick={() => onClickHandler()}\n            className={classes.join(' ')}\n        >\n            <div\n                style={previewType === \"card\"? previewImage : null}\n                className={classesCss.Preview}\n            />\n            <span className={\"label\"}>{label}</span>\n        </div>\n    )\n}","import React from 'react'\nimport PickItem from \"./PickItem\";\nimport InnerMenu from \"../InnerMenu\";\n\nexport default function PickMenu(props) {\n    const {\n        menuClasses,\n        itemClasses,\n        navigationClasses,\n        itemData,\n        onBackHandler,\n        previewType\n    } = props;\n\n    const itemClassesWrap = [];\n    itemClassesWrap.push(itemClasses)\n\n    return (\n        <InnerMenu\n            menuClasses={menuClasses}\n            navigationClasses={navigationClasses}\n            onBackHandler={onBackHandler}\n        >\n            {\n                itemData.itemSet.map((item, index) => {\n                    return (\n                        <PickItem\n                            selected={index === itemData.currentIndex}\n                            className={itemClassesWrap.join(\" \")}\n                            selectHandler={() => itemData.selectHandler(index)}\n                            label={item.label}\n                            key={index}\n                            index={index}\n                            preview={item.preview}\n                            previewType={previewType} //full, card\n                        />\n                    )\n                })\n            }\n        </InnerMenu>\n    )\n}","import React from 'react'\nimport classesCss from './styles/Layouts.module.scss'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faGithub} from '@fortawesome/free-brands-svg-icons'\n\n\nfunction InfoLayout() {\n    return (\n        <div className={classesCss.InfoLayout}>\n            <p><a href={\"#controls\"}>Controls</a></p>\n            <p><a href={\"#about\"}>About</a></p>\n            <p><a href={\"#credits\"}>Credits</a></p>\n            <div id={\"controls\"}>\n                <h3>Controls</h3>\n                <div className={classesCss.InfoRow}>\n                    <div className={classesCss.ControlBlock}>\n                        <img alt=\"swipeUp\" src={process.env.PUBLIC_URL + \"assets/helpers/swipeJump.png\"}/>\n                        Jump\n                    </div>\n                    <div className={classesCss.ControlBlock}>\n                        <img alt=\"swipeSides\" src={process.env.PUBLIC_URL + \"assets/helpers/swipeMove.png\"}/>\n                        Move right and left\n                    </div>\n                    <div className={classesCss.ControlBlock}>\n                        <img alt=\"swipeDown\" src={process.env.PUBLIC_URL + \"assets/helpers/swipeSit.png\"}/>\n                        Sit down\n                    </div>\n                </div>\n                <div className={classesCss.InfoRow}>\n                    <div className={classesCss.ControlBlock} style={{width: '40%', margin: \"auto\"}}>\n                        <img alt=\"buttons\" src={process.env.PUBLIC_URL + \"assets/helpers/buttons.png\"}/>\n                        Jump\n                    </div>\n\n                </div>\n            </div>\n            <div id={\"about\"}>\n                <h3>About</h3>\n                <ul>\n                    <li>2. Анимации: перемещение персонажа, движение перпятствий и бэкграунда,\n                        анимированы некоторые кнопки (пуск, рестарт)</li>\n                    <li>4. Звуки и музыка: Регулеровка громкости, кнопка включение/отключения звука.\n                        Могут быть заданы звуковые эффект для начала раунда и прыжка</li>\n                    <li>5. Настройки игры: выбор локации, смена персонажа</li>\n                    <li>6. Статистика: сохраняется лучший результат,\n                        записываются результаты 10 последних игры в тыблице Statistics, доступное через меню</li>\n                    <li>7. Сохранение состояния игры: сохраняется уровень звука,\n                        его включение/отключение, выбранный персонаж и локация, лучший результат</li>\n                    <li>8. Клавиатура: Управление стрелками, Пауза/продолжение/рестарт - пробел, включить/отклбючить\n                        звук - M, управлени на смартфоне с помощью сенсора</li>\n                </ul>\n            </div>\n            <div id={\"credits\"}>\n                <h3>Credits</h3>\n                <div className={classesCss.InfoRow}>\n                    <div className={classesCss.Credits}>\n                        <div>\n                            <a href={\"https://rs.school/js/\"}>\n                                <img alt=\"Rss\" src={process.env.PUBLIC_URL + \"assets/helpers/rs_school_js.svg\"}/>\n                            </a>\n                        </div>\n                        <div>\n                            <a href={\"https://github.com/heyheyjude\"}> <FontAwesomeIcon icon={faGithub}/> Anton Karytski</a>\n                        </div>\n                        <div>\n                            2021. Gybopic sosat\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InfoLayout","import React, {useState} from 'react'\nimport './styles/style.scss'\nimport classesCss from './styles/Layouts.module.scss'\nimport Button from \"../../components/Navigation/Buttons/Button\";\nimport ResetButton from \"../../components/Navigation/Buttons/ResetButton\";\nimport SoundRangeSlider from \"../../components/Navigation/RangeSlider/SoundRangeSlider\";\nimport RangeSlider from \"../../components/Navigation/RangeSlider/RangeSlider\";\nimport StatisticMenu from \"../../components/Navigation/Menu/StatisticMenu\"\nimport PickMenu from \"../../components/Navigation/Menu/PickMenu/PickMenu\";\nimport InfoLayout from \"./InfoLayout\";\nimport {faPlay} from '@fortawesome/free-solid-svg-icons';\n\nfunction MenuLayout(props) {\n\n    const {\n        game,\n        locationData,\n        heroData,\n        sound,\n        statistic\n    } = props\n\n    const [menuMode, setMenuMode] = useState('init') //init, start, heroSelect, locationSelect, lose, pause\n\n    let currentColonContent = null;\n    let menuContent = null;\n    const resetClasses = [classesCss.BigButton, classesCss.ResetButton].join(\" \")\n\n    switch (menuMode) {\n        case \"init\":\n            if (game.state.infoMenuOpened) {\n                menuContent =\n                    <InfoLayout />\n            } else {\n                if (game.state.lose) {\n                    currentColonContent =\n                        <div className={[classesCss.CurrentColumn, classesCss.LoseMessage].join(' ')}>\n                            <h2>YOU LOSE</h2>\n                            <ResetButton\n                                onResetGame={game.onResetGame}\n                                className={resetClasses}\n                            />\n                            <span>or press <i>SPACE</i></span>\n                        </div>\n\n                } else {\n                    currentColonContent =\n                        <div className={classesCss.CurrentColumn}>\n                            <ResetButton\n                                onResetGame={game.onResetGame}\n                                className={resetClasses}\n                            />\n                            <Button\n                                onClick={() => game.onPauseToggle()}\n                                className={classesCss.BigButton}\n                                valueDefault={faPlay}\n                                faIcon={true}\n                            />\n                        </div>\n                }\n                menuContent =\n                    <div className={classesCss.MenuContent}>\n                        {currentColonContent}\n                        <div className={classesCss.SettingColumn}>\n                            <SoundRangeSlider\n                                initValue={sound.initValue}\n                                onSoundToggle={sound.onSoundToggle}\n                                soundMuted={sound.muted}\n                                onChange={sound.onSoundVolumeChange}\n                            />\n                            <div className={classesCss.SpeedButton}>\n                                <span>SPEED </span>\n                                <RangeSlider\n                                    initValue={game.state.difficult}\n                                    onChange={game.difficultChangeHandler}\n                                    min = {1}\n                                    max = {4}\n                                    step = {1}\n                                />\n                            </div>\n\n                            <Button\n                                onClick={() => setMenuMode(\"heroSelect\")}\n                                className={classesCss.SelectButton}\n                                valueDefault={\"SELECT HERO\"}\n                            />\n                            <Button\n                                style={{fontSize: \"15px\"}}\n                                onClick={() => setMenuMode(\"locationSelect\")}\n                                className={classesCss.SelectButton}\n                                valueDefault={\"SELECT LOCATION\"}\n                            />\n                            <Button\n                                onClick={() => setMenuMode(\"statistic\")}\n                                className={classesCss.SelectButton}\n                                valueDefault={\"STATISTIC\"}\n                            />\n                        </div>\n                    </div>\n            }\n\n            break\n        case \"heroSelect\":\n            menuContent =\n                <PickMenu\n                    itemClasses={\"hero\"}\n                    itemData={heroData}\n                    onBackHandler={() => setMenuMode(\"init\")}\n                    previewType={\"card\"}\n                />\n            break\n        case \"locationSelect\":\n            menuContent =\n                <PickMenu\n                    itemClasses={[\"location\", classesCss.LocationPickerItem].join(\" \")}\n                    itemData={locationData}\n                    onBackHandler={() => setMenuMode(\"init\")}\n                    previewType={\"full\"}\n                />\n            break\n        case \"statistic\":\n            menuContent =\n                <StatisticMenu\n                    statistic={statistic}\n                    onBackHandler={() => setMenuMode(\"init\")}\n                />\n            break\n        case \"info\":\n            menuContent =\n                <StatisticMenu\n                    statistic={statistic}\n                    onBackHandler={() => setMenuMode(\"init\")}\n                />\n            break\n        default:\n            currentColonContent = null\n    }\n\n    return (\n        <div className={classesCss.MenuLayout}>\n            {menuContent}\n        </div>\n    )\n}\n\nexport default MenuLayout","import {useState} from 'react'\nimport useKeyPress from \"./useKeyPress\";\n\nexport default function useUnshiftKeyPress(fn, button){\n\n    const [keyPressed, setKeyPressed] = useState(false);\n\n    useKeyPress({\n        [button] : () => {\n            if(!keyPressed){\n                setKeyPressed(true);\n                fn()\n            }\n        }\n    }, \"keydown\")\n\n    useKeyPress({\n        [button] : () => {\n            setKeyPressed(false);\n        }\n    }, \"keyup\")\n}","import React, { useEffect, useRef, useState } from \"react\"\nimport Audio from \"../components/Helpres/Audio\"\nimport GameLayout from \"./Layouts/GameLayout\"\nimport NavigationLayout from \"./Layouts/NavigationLayout\"\nimport MenuLayout from \"./Layouts/MenuLayout\"\nimport classesCss from \"./Frame.module.scss\"\nimport useUnshiftKeyPress from \"../hooks/useUnshiftKeyPress\"\nimport { useParams } from \"react-router\"\n\n/*\n\nSTRUCTURE:\nNavigation Layout:\n - Counter\n - Game-Over-Window + retry button + change char Button\n - Skills indicators\n - Char Selection\n - Start Button\n\n GameLayout\n - Chars\n - Obstacles\n - Skills Effects\n\n */\n\nconst Frame = ({gameHelper, windowSize}) => {\n\n    //\n    //Init saved in local storage values\n    //\n\n    const savedSoundMuted = !!getSavedNumberVal(\"soundMuted\", 0)\n    const savedSoundVolume = getSavedNumberVal(\"soundVolume\", 50)\n    const savedGameDifficult = getSavedNumberVal(\"gameDifficult\", 2)\n\n    const {game} = useParams()\n\n    let initLocation\n    let savedHeroIndex\n\n    if(game && gameHelper.findLocation(game) > -1){\n        initLocation = game\n        savedHeroIndex = 0\n    } else {\n        initLocation = parseLocation(gameHelper.settings.defaultLocation)\n        savedHeroIndex = getSavedNumberVal(\"hero\", 0)\n    }\n\n\n    //\n    //Init hooks vars\n    //\n\n    const [gameState, setGameState] = useState({\n        pause: true,\n        lose: false,\n        set: 1,\n        init: true,\n        infoMenuOpened: false,\n        gameStartTime: new Date(),\n        difficult: savedGameDifficult\n    })\n\n    const [hero, setHero] = useState({\n        item: gameHelper.getHero(savedHeroIndex),\n        index: savedHeroIndex\n    })\n\n    const [soundState, setSoundState] = useState({\n        muted: savedSoundMuted,\n        volume: savedSoundVolume\n    })\n\n    if (gameState.init && gameHelper.currenLocationIndex !== initLocation) {\n        gameHelper.setLocation(initLocation)\n    }\n\n    const [locationData, setLocationData] = useState({\n        index: initLocation,\n        heroes: gameHelper.heroes,\n        environment: gameHelper.environment,\n    })\n\n    const [fullScreenState, setFullScreenState] = useState(false)\n\n    const gameFrame = useRef(null)\n\n    const keyActionsMap = {\n        SPACE: () => {\n            if (!gameState.lose) {\n                pauseToggleHandler()\n            } else {\n                resetGame()\n            }\n        },\n        m: () => {\n            soundMutedToggleHandler()\n        }\n    }\n\n    //\n    //Handlers\n    //\n\n\n    function parseLocation(defaultVal){\n       const savedLocation = localStorage.getItem(\"location\") ?? defaultVal\n        if(!isNaN(Number(savedLocation))) return Number(savedLocation)\n        return savedLocation\n    }\n\n    function includeScoreSet(currentScoreString, score){\n        if (currentScoreString) {\n            const scoreHistorySet = currentScoreString.split(\",\")\n            if (scoreHistorySet.length >= 10) scoreHistorySet.splice(9, 1)\n            scoreHistorySet.splice(0, 0, score + \"\");\n            return scoreHistorySet.join(\",\")\n        }\n        return score + \"\"\n    }\n\n    function updateGameState(newState) {\n        setGameState(Object.assign({}, gameState, newState))\n    }\n\n    function getSavedNumberVal(val, defaultVal) {\n        return Number(localStorage.getItem(val) || defaultVal)\n    }\n\n\n    function getMusic(selector) {\n        return gameFrame.current.querySelector(`audio#${selector}`)\n    }\n\n    function getScore(){\n        return gameFrame.current.querySelector(\"#score-counter\").dataset.score\n    }\n\n    const soundVolumeChangeHandler = (soundVolume) => {\n        setSoundState({\n            volume: soundVolume,\n            muted: soundVolume <= 0\n        })\n    }\n\n    const soundMutedToggleHandler = () => {\n        setSoundState({\n            //if turn on sound when volume = 0, set volume = 10(0.1)\n            volume: soundState.muted && soundState.volume <= 0 ? 10 : soundState.volume,\n            muted: !soundState.muted\n        })\n    }\n\n    const gameDifficultChangeHandler = (value) => {\n        updateGameState({\n            difficult: value\n        })\n        localStorage.setItem(\"gameDifficult\", value)\n    }\n\n\n    const pauseToggleHandler = (flag = false) => {\n        const score = getScore();\n\n        if (score > getSavedNumberVal(\"bestScore\", 0)) {\n            localStorage.setItem(\"bestScore\", score + \"\")\n        }\n\n        if(flag === \"lose\"){\n            const newScoreString = includeScoreSet(localStorage.getItem(\"scoreHistory\"), score)\n            localStorage.setItem(\"scoreHistory\", newScoreString)\n        }\n\n        updateGameState({\n            lose: flag === \"lose\",\n            pause: !gameState.pause,\n            set: gameState.set,\n            init: false,\n            infoMenuOpened: false\n        })\n\n        //Call here cause user have to do some action before music starts, so music starts\n        // after user press key for game start\n        if (locationData.environment.bgMusic) {\n            const bgMusic = getMusic(\"bg-music\")\n            if (bgMusic.paused) bgMusic.play();\n        }\n    }\n\n\n    const heroSelectHandler = (index) => {\n        setHero({\n            item: gameHelper.getHero(index),\n            index\n        })\n    }\n\n    const locationSelectHandler = (index) => {\n        gameHelper.setLocation(index)\n        setLocationData({\n            index: index,\n            heroes: gameHelper.heroes,\n            environment: gameHelper.getEnvironment()\n        })\n        heroSelectHandler(0)\n        updateGameState({\n            lose: gameState.lose,\n            pause: gameState.pause,\n            set: gameState.set + 1,\n            init: false,\n            infoMenuOpened: false\n        })\n    }\n\n    const fullScreenHandler = () => {\n\n        function launchFullScreen(element) {\n            if(element.requestFullScreen) {\n                element.requestFullScreen();\n            } else if(element.mozRequestFullScreen) {\n                element.mozRequestFullScreen();\n            } else if(element.webkitRequestFullScreen) {\n                element.webkitRequestFullScreen();\n            }\n        }\n\n        function cancelFullscreen() {\n            if(document.cancelFullScreen) {\n                document.cancelFullScreen();\n            } else if(document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if(document.webkitCancelFullScreen) {\n                document.webkitCancelFullScreen();\n            }\n        }\n        if(fullScreenState){\n            cancelFullscreen()\n        } else {\n            launchFullScreen(gameFrame.current)\n        }\n        setFullScreenState(!fullScreenState)\n    }\n\n    function infoMenuHandler(){\n        const stateToUpd = {\n            infoMenuOpened: !gameState.infoMenuOpened\n        }\n        if(!gameState.infoMenuOpened){\n            stateToUpd.menuWasPaused = gameState.pause\n            stateToUpd.pause = true\n        } else {\n            stateToUpd.pause = gameState.menuWasPaused\n        }\n        updateGameState(stateToUpd)\n    }\n\n    const resetGame = () => {\n        updateGameState({\n            lose: gameState.lose ? false : gameState.lose,\n            pause: false,\n            set: gameState.set + 1,\n            gameStartTime: new Date()\n        })\n    }\n\n    //\n    //Hooks\n    //\n\n    useUnshiftKeyPress(keyActionsMap.SPACE, \"SPACE\")\n    useUnshiftKeyPress(keyActionsMap.m, \"m\")\n\n    useEffect(() => {\n        localStorage.setItem(\"hero\", hero.index + \"\")\n    }, [hero])\n\n    useEffect(() => {\n        if (locationData.environment.bgMusic) {\n            const bgMusic = getMusic(\"bg-music\");\n            if (!bgMusic.paused) {\n                bgMusic.pause();\n            }\n            bgMusic.load();\n            bgMusic.muted = soundState.muted;\n            bgMusic.volume = soundState.volume / 100 * 0.7;\n        }\n        localStorage.setItem(\"location\", locationData.index + \"\")\n    }, [locationData.index])\n\n    useEffect(() => {\n        if (locationData.environment.bgMusic) {\n            const bgMusic = getMusic(\"bg-music\");\n            bgMusic.muted = soundState.muted;\n        }\n        localStorage.setItem(\"soundMuted\", soundState.muted ? \"1\" : \"0\")\n    }, [soundState.muted])\n\n    useEffect(() => {\n        if (locationData.environment.bgMusic) {\n            const bgMusic = getMusic(\"bg-music\");\n            bgMusic.volume = soundState.volume / 100 * 0.7;\n        }\n        localStorage.setItem(\"soundVolume\", soundState.volume + \"\")\n    }, [soundState.volume])\n\n    useEffect(() => {\n        if (locationData.bgMusic) {\n            const bgMusic = getMusic(\"bg-music\");\n            bgMusic.muted = soundState.muted;\n            bgMusic.volume = soundState.volume / 100 * 0.7;\n        }\n    }, [])\n\n    //\n    //Styles and props prepare\n    //\n\n    if(windowSize.width < gameHelper.settings.defaultFrameWidth){\n        gameHelper.settings.frameWidth = windowSize.width\n        gameHelper.settings.frameBorder = false\n    } else {\n        gameHelper.settings.frameWidth = gameHelper.settings.defaultFrameWidth\n        gameHelper.settings.frameBorder = true\n    }\n\n    if(windowSize.width < windowSize.height){\n        gameHelper.settings.frameHeight = windowSize.height\n        gameHelper.settings.frameBorder = false\n    } else if(windowSize.height < gameHelper.settings.defaultFrameHeight){\n        gameHelper.settings.frameHeight = windowSize.height\n        gameHelper.settings.frameBorder = false\n    } else {\n        gameHelper.settings.frameHeight = gameHelper.settings.defaultFrameHeight\n        gameHelper.settings.frameBorder = true\n    }\n\n    const style = {\n        height: gameHelper.settings.frameHeight,\n        width: gameHelper.settings.frameWidth\n    }\n    if (gameHelper.settings.frameBorder) style.border = \"1px solid black\"\n\n    return (\n        <div className={classesCss.Wrap} ref={gameFrame}>\n            {gameHelper.settings.frameBorder ? <div className={classesCss.Border}/> : null}\n            <div className={classesCss.Frame} style={style}>\n                {locationData.environment.bgMusic ?\n                    <Audio\n                        loop={true}\n                        id={\"bg-music\"}\n                        src={locationData.environment.bgMusic}\n                    />\n                    : null}\n                <GameLayout\n                    soundVolume={soundState.volume}\n                    soundMuted={soundState.muted}\n                    key={gameState.set}\n                    difficult = {gameState.difficult}\n                    gameOnPause={gameState.pause}\n                    onPauseToggle={pauseToggleHandler}\n                    char={hero.item}\n                    gameHelper={gameHelper}\n                    environment={locationData.environment}\n                />\n                <NavigationLayout\n                    counterId = {\"score-counter\"}\n                    bestScore={getSavedNumberVal(\"bestScore\", 0)}\n                    fullScreen={fullScreenState}\n                    fullScreenToggle={fullScreenHandler}\n                    gameState={gameState}\n                    onPauseToggle={pauseToggleHandler}\n                    soundMuted={soundState.muted}\n                    onSoundToggle={soundMutedToggleHandler}\n                    infoMenuToggle={infoMenuHandler}\n                />\n                {gameState.pause ?\n                    <MenuLayout\n                        locationData={{\n                            itemSet: gameHelper.locationSet,\n                            currentIndex: locationData.index,\n                            selectHandler: locationSelectHandler,\n                        }}\n\n                        heroData={{\n                            itemSet: locationData.heroes,\n                            currentIndex: hero.index,\n                            selectHandler: heroSelectHandler,\n                        }}\n\n                        statistic={{\n                            scoreHistory : localStorage.getItem(\"scoreHistory\"),\n                            bestScore : getSavedNumberVal(\"bestScore\", 0)\n                        }}\n\n                        sound={{\n                            initValue: savedSoundVolume,\n                            muted: soundState.muted,\n                            onSoundToggle: soundMutedToggleHandler,\n                            onSoundVolumeChange: soundVolumeChangeHandler\n                        }}\n\n                        game={{\n                            state: gameState,\n                            onResetGame: resetGame,\n                            onPauseToggle: pauseToggleHandler,\n                            difficultChangeHandler: gameDifficultChangeHandler\n                        }}\n                    />\n                    : null}\n            </div>\n            {gameHelper.settings.frameBorder ? <div className={classesCss.Border}/> : null}\n        </div>\n    )\n}\n\nexport default Frame","export const SETTINGS = {\n    defaultFrameWidth : 1024,\n    defaultFrameHeight : 512,\n    defaultVerticalMargin: 50,\n    defaultFrameBorder: true,\n\n    defaultLocation: 1,\n    pathToAssets : 'assets',\n\n    generationMinTime: 600,\n    generationMaxTime: 2150,\n    baseSpeed: 200,\n\n    minTimeDecreaseFunction: function(time, anchor, multi = 250){\n        return time - anchor ** (1/9) * multi + multi\n    },\n\n    maxTimeDecreaseFunction: function(time, anchor, multi = 500){\n        return time - anchor ** (1/5) * multi + multi\n    },\n\n    speedFunction: function(baseSpeed, anchor){\n        return  baseSpeed + baseSpeed * (Math.log(anchor+1)/Math.log(10)/27.2) * (anchor ** (1/2.72))\n    },\n\n    locationSoundFolder : 'sounds',\n    defaultLocationPreview : 'preview.jpg',\n    defaultLocationBgSound : 'bgmusic.mp3',\n    defaultLocationBgImage : \"bg-common.jpg\",\n    defaultLocationsMobileBgImage: \"bg-common-mobile.jpg\",\n    locationPrototype: {\n        bottom: 0,\n        bgImage: true,\n        bgMobileImage: false,\n        bgMusic: false,\n        effects: false,\n    },\n\n    obstacleFolder: 'obstacles',\n    defaultObstacleSprite: 'sprite.png',\n    obstaclesPrototype : {\n        weight: 1,\n        width: 30,\n        height: 30,\n        altitude: 0,\n        sprite: true,\n        display: true,\n        position: 0,\n        customBgSize: false,\n        sizeCorrection: 0,\n        randomWidth: 0,\n        randomHeight: 0,\n        effect: false,\n        speedK : 1,\n    },\n\n    heroFolder: 'chars',\n    defaultHeroSprite: 'sprite.png',\n    defaultHeroProps: {\n        preview: 'preview.png',\n        soundHello: 'hello.mp3',\n        soundJump: 'jump.mp3'\n    },\n    heroPrototype : {\n        sizes : {\n            default : {\n                w : 40,\n                h : 50\n            },\n            sit : {\n                w : 50,\n                h : 30\n            }\n        },\n        preview: true,\n        soundHello : false,\n        soundJump : false,\n        spriteRunPositions: [{x: 0, y: 0},{x: 299, y: 0}],\n        spriteRunSteps: 3,\n        spriteSitSteps: 3,\n        sizeCorrection: 0,\n        sizeSitCorrection: 0,\n    },\n}","export default class gameHelperClass{\n\n    currentLocation;\n    locationSet;\n    obstacleWeights;\n    obstacles;\n    heroMap;\n    heroes;\n    environment;\n    pathToLocation;\n\n    constructor(settings, locations){\n        this.settings = {...settings}\n        this.locations = {...locations}\n        this.settings.frameBorder = this.settings.defaultFrameBorder;\n        this.locationSet = this.prepareLocationSet(locations)\n        this.currentLocation = this.setLocation(settings.defaultLocation)\n\n\n    }\n\n    //Prepare All objects for using in app, so when user change location all objects re-preparing\n\n    setLocation(locationName = this.settings.defaultLocation || 0){\n        let locationIndex = this.findLocation(locationName)\n        if(locationIndex === -1) locationIndex = 0\n        this.currentLocation = this.locations[locationIndex];\n        this.currenLocationIndex = locationIndex\n        this.pathToLocation = this.settings.pathToAssets + \"/\" + this.currentLocation.name\n        this.obstacleWeights = this.setWeights(this.currentLocation.obstacles)\n        this.obstacles = this.prepareObstacleSet(this.currentLocation.obstacles)\n        this.heroMap = this.createHeroMap(this.currentLocation.heroes)\n        this.heroes = this.prepareHeroSet(this.currentLocation.heroes)\n        this.environment = this.prepareEnvironment(this.currentLocation.environment)\n        return this.currentLocation\n    }\n\n    findLocation(index){\n        if(typeof index === \"string\"){\n            for(let locationIndex in this.locations){\n                if(this.locations[locationIndex].name === index){\n                    return locationIndex\n                }\n            }\n            return -1\n        } else if(this.locations.length-1 < index){\n            return -1\n        }\n        return index\n    }\n\n    setWeights(options = this.currentLocation.obstacles) {\n        const ranges = [];\n        for (let i = 0; i < options.length; i++) {\n            ranges[i] = options[i].weight + (ranges[i - 1] || 0);\n        }\n        return (ranges);\n    }\n\n    //Create map of heroes names for have possibility to return them, by the name\n    createHeroMap(options = this.currentLocation.heroes) {\n        const map = [];\n        for (let i = 0; i < options.length; i++) {\n            map[i] = options[i].name;\n        }\n        return map;\n    }\n\n    prepareLocationSet(locations = this.locations){\n        return locations.map((location) => {\n            const previewFile = location.preview || this.settings.defaultLocationPreview\n            return {\n                name : location.name,\n                preview : `${this.settings.pathToAssets}/${location.name}/${previewFile}`\n            }\n        })\n    }\n\n    prepareObstacleSet(unpreparedObstacleSet = this.currentLocation.obstacles){\n        return unpreparedObstacleSet.map((obstacle) => {\n            const preparedObstacle = Object.assign({},this.settings.obstaclesPrototype, obstacle)\n            if(preparedObstacle.sprite){\n                const obstacleSpriteFile = typeof obstacle.sprite === \"string\"? obstacle.sprite : this.settings.defaultObstacleSprite\n\n                const spritePath = `${this.settings.obstacleFolder}/${obstacle.type}/${obstacleSpriteFile}`\n                preparedObstacle.sprite = `${this.pathToLocation}/${spritePath}`\n\n            }\n            return preparedObstacle\n        })\n    }\n\n    prepareHeroSet(unpreparedHeroSet){\n        const heroPrototype = this.settings.heroPrototype\n        const pathToCharsFolder = `${this.pathToLocation}/${this.settings.heroFolder}/`\n\n        return unpreparedHeroSet.map((hero) => {\n            const pathToHeroFolder = pathToCharsFolder + hero.name\n            const preparedHero = Object.assign({}, heroPrototype, hero)\n            preparedHero.sprite = `${pathToHeroFolder}/${hero.sprite || this.settings.defaultHeroSprite}`\n\n            for(let attr in this.settings.defaultHeroProps){\n                if(preparedHero[attr]){\n                    const attrPath = typeof preparedHero[attr] === \"string\"?\n                        preparedHero[attr] : this.settings.defaultHeroProps[attr]\n\n                    preparedHero[attr] = `${pathToHeroFolder}/${attrPath}`;\n                }\n            }\n\n            return preparedHero\n        })\n    }\n\n    getHeroSet(locationIndex){\n        return this.prepareHeroSet(this.locations[locationIndex].heroes);\n    }\n\n    prepareEnvironment(unpreparedEnv){\n        const settings = this.settings;\n        const preparedEnv = Object.assign({}, settings.locationPrototype, unpreparedEnv);\n\n\n\n        window.mobileCheck = function() {\n            let check = false;\n            (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n            return check;\n        };\n\n        if(window.mobileCheck() && preparedEnv.bgMobileImage){\n\n            const bgFile = typeof preparedEnv.bgMobileImage === \"string\"? preparedEnv.bgMobileImage : settings.defaultLocationBgMobileImage\n            preparedEnv.bgImage = `${this.pathToLocation}/${bgFile}`\n            preparedEnv.bgNaturalWidth = preparedEnv.bgNaturalMobileWidth\n            preparedEnv.bgNaturalHeight = preparedEnv.bgNaturalMobileHeight\n        } else {\n            const bgFile = typeof preparedEnv.bgImage === \"string\"? preparedEnv.bgImage : settings.defaultLocationBgImage\n            preparedEnv.bgImage = `${this.pathToLocation}/${bgFile}`\n        }\n\n        if(preparedEnv.bgMusic){\n            const defFolder = settings.locationSoundFolder;\n            const defSoundFile = settings.defaultLocationBgSound\n            preparedEnv.bgMusic = `${this.pathToLocation}/${defFolder}/${defSoundFile}`;\n        }\n        return preparedEnv;\n    }\n\n    prepareAltitude(altitude){\n        if(Array.isArray(altitude)){\n            return altitude[0] + Math.random() * (altitude[1] - altitude[0])\n        }\n        return altitude\n    }\n\n    getObstacle(obstacle){\n        return Object.assign(\n            {},\n            obstacle,\n            {altitude : this.prepareAltitude(obstacle.altitude)});\n    }\n\n    getRandomObstacle(){\n        const weights = this.obstacleWeights\n        const range = Math.random() * weights[weights.length - 1];\n        for (let i = 0; i < weights.length; i++) {\n            if (weights[i] > range){\n                return this.getObstacle(this.obstacles[i])\n            }\n        }\n    }\n\n    getHero(heroIndex = 0){\n        return typeof heroIndex === \"number\" ? this.heroes[heroIndex] : this.heroes[this.heroMap.indexOf(heroIndex)];\n    }\n\n    getEnvironment(locationIndex){\n        if(locationIndex){\n            return this.prepareEnvironment(this.locations[locationIndex].environment)\n        }\n        return this.environment;\n    }\n}","import styled from 'styled-components'\n\nconst StyledApp = styled.div`\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n  'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n  sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  overflow-x: hidden;\n`\n\nexport default StyledApp;","import {useEffect, useState} from 'react'\n\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowSize;\n}\n\nexport default useWindowSize","import React from \"react\"\nimport Frame from \"./containers/Frame\"\nimport { LOCATIONS } from \"./locations\"\nimport { SETTINGS } from \"./settings\"\nimport gameHelperClass from \"./gameHelper\"\nimport StyledApp from \"./styles/StyledApp\"\nimport useWindowSize from \"./hooks/useWindowSize\"\nimport { Route } from \"react-router\"\n\n\nconst gameHelper = new gameHelperClass(SETTINGS, LOCATIONS)\n\n\nconst App = () => {\n\n\tconst windowSize = useWindowSize()\n\n\n\treturn (\n\t\t<StyledApp>\n\t\t\t<Route path={[\"/:game\", \"/\"]}>\n\t\t\t\t<Frame\n\t\t\t\t\tgameHelper={gameHelper}\n\t\t\t\t\twindowSize={windowSize}\n\t\t\t\t/>\n\t\t\t</Route>\n\n\t\t</StyledApp>\n\t)\n}\n\nexport default App\n","export const LOCATIONS = [\n    {\n        name: \"belarus\",\n        label: \"Лукашенку а автозак\",\n        preview: \"preview.png\",\n\n        heroes: [\n            {\n                name: \"nina\",\n                label: \"Нина\",\n                soundJump: false,\n                sizes: {\n                    default: {\n                        w: 96,\n                        h: 110,\n                    },\n                    sit: {\n                        w: 90,\n                        h: 93\n                    }\n                },\n                sizeCorrection: {\n                    top: 0,\n                    left: 0.5,\n                    right: 0.1,\n                    bottom: 0.1,\n                },\n                sizeSitCorrection: {\n                    top: 0.05,\n                    left: 0.5,\n                    right: 0.1,\n                    bottom: 0,\n                },\n                soundHello: false,\n                spriteRunPositions: [{x: 0, y: 0}, {x: 411.5, y: 0}],\n                spriteRunSteps: 4,\n                spriteSitPositions: [{x: 0, y: 168}, {x: 385, y: 168}],\n                spriteSitSteps: 4,\n                spriteJumpPosition: {x: 0, y: 168},\n                spriteDefaultPosition: {x: 0, y: 0},\n\n            }\n        ],\n\n        obstacles: [\n            {\n                type: \"commonOmon\",\n                label: \"Обычный омоновец\",\n                weight: 1,\n                width: 59,\n                height: 130,\n                altitude: 0,\n                sizeCorrection: {\n                    top: 0.05,\n                    left: 0.05,\n                    right: 0.05,\n                    bottom: 0,\n                },\n            },\n            {\n                type: \"puffyOmon\",\n                label: \"Толстый омоновец\",\n                weight: 1,\n                width: 52,\n                height: 110,\n                altitude: 0,\n                sizeCorrection: {\n                    top: 0.05,\n                    left: 0.05,\n                    right: 0.05,\n                    bottom: 0,\n                },\n                speedK: 0.9\n            },\n            {\n                type: \"avtozak\",\n                label: \"Автозак\",\n                weight: 0.15,\n                width: 180,\n                height: 90,\n                altitude: 0,\n                sizeCorrection: {\n                    top: 0.05,\n                    left: 0.15,\n                    right: 0.1,\n                    bottom: 0,\n                },\n                speedK: 1.2\n            },\n            {\n                type: \"waterzak\",\n                label: \"Водомет\",\n                weight: 0.15,\n                width: 180,\n                height: 88,\n                altitude: 0,\n                sizeCorrection: {\n                    top: 0.05,\n                    left: 0.2,\n                    right: 0.05,\n                    bottom: 0,\n                },\n                speedK: 1.1\n            },\n            {\n                type: \"balloon\",\n                label: \"Воздушный шар\",\n                weight: 0.8,\n                width: 50,\n                height: 98.5,\n                altitude: [25, 175],\n                effect: {\n                    name: \"altitude\",\n                    altitude: [50, -25],\n                },\n                sizeCorrection: {\n                    top: 0,\n                    left: 0.05,\n                    right: 0.05,\n                    bottom: 0.45,\n                },\n                speedK: 0.65\n            },\n\n        ],\n\n        environment: {\n            bottom: 0,\n            bgMusic: true,\n            bgNaturalWidth: 4548,\n            bgNaturalHeight: 1000,\n            bgImage: 'bg-common.png',\n            bgNaturalMobileWidth: 2465,\n            bgNaturalMobileHeight: 700,\n            bgMobileImage: 'bg-common-mobile.png',\n\n        }\n    },\n\n    /*\n\n    AQUA DISCO\n\n     */\n    {\n        name: \"aquadisco\",\n        label: \"Акводискотека\",\n\n        heroes: [\n            {\n                name: \"navalny\",\n                label: \"Леша Навальный\",\n                soundJump: true,\n                sizes: {\n                    default: {\n                        w: 60,\n                        h: 110,\n                    },\n                    sit: {\n                        w: 100,\n                        h: 75\n                    }\n                },\n                sizeCorrection: {\n                    top: 0.1,\n                    left: 0.15,\n                    right: 0,\n                    bottom: 0.2,\n                },\n                sizeSitCorrection: {\n                    top: 0.1,\n                    left: 0,\n                    right: 0.45,\n                    bottom: 0,\n                },\n                soundHello: true,\n                spriteRunPositions: [{x: 0, y: 0}, {x: 299, y: 0}],\n                spriteRunSteps: 4,\n                spriteSitPositions: [{x: 0, y: 115}, {x: 355, y: 115}],\n                spriteJumpPosition: {x: 385, y: 0},\n                spriteDefaultPosition: {x: 310, y: 0},\n\n            }\n        ],\n\n        obstacles: [\n            {\n                type: \"toiletBrush\",\n                label: \"Ершик\",\n                weight: 0.5,\n                width: 57,\n                height: 21,\n                altitude: [25, 175],\n                effect: {name: \"rotate\"},\n                speedK: 1.25\n            },\n            {\n                type: \"putin\",\n                label: \"Путин\",\n                weight: 1,\n                width: 80,\n                height: 130,\n                altitude: 0,\n                sprite: 'putin2.gif',\n                customBgSize: \"auto\",\n                sizeCorrection: {\n                    top: 0.05,\n                    left: 0.25,\n                    right: 0.25,\n                    bottom: 0,\n                },\n                randomWidth: 1.8,\n                randomHeight: 0.3\n            },\n            {\n                type: \"putin2\",\n                label: \"Путин 2\",\n                weight: 0.5,\n                width: 92,\n                height: 130,\n                altitude: [65, 200],\n                sprite: 'sprite.gif',\n                sizeCorrection: {\n                    top: 0.08,\n                    left: 0.33,\n                    right: 0.33,\n                    bottom: 0.20,\n                },\n                effect: {\n                    name: \"rotate\",\n                    speed: [0.1, 7],\n                    direction: 'rand'\n                },\n            },\n        ],\n\n        environment: {\n            bottom: 0,\n            bgMusic: true,\n            bgNaturalWidth: 6935,\n            bgNaturalHeight: 763,\n            bgImage: 'bg-common2.jpg',\n            bgNaturalMobileWidth: 2800,\n            bgNaturalMobileHeight: 763,\n            bgMobileImage: 'bg-common.jpg',\n            effects: \"disco\"\n        }\n    },\n    {\n        name: \"jungle\",\n        label: \"Опасные джунгли\",\n        preview: \"\",\n\n        heroes: [\n            {\n                name: \"soldier\",\n                label: \"Soldier 1\",\n                soundJump: true,\n                sizes: {\n                    default: {\n                        w: 40,\n                        h: 50\n                    },\n                    sit: {\n                        w: 50,\n                        h: 40\n                    }\n                },\n                spriteRunPositions: [{x: 0, y: 0}, {x: 139, y: 0}],\n                spriteRunSteps: 3,\n                spriteSitPositions: [{x: 140, y: 10}, {x: 295, y: 10}],\n            },\n            {\n                name: \"man\",\n                label: \"Man 1\",\n                soundJump: false,\n                sizes: {\n                    default: {\n                        w: 74,\n                        h: 91\n                    },\n                    sit: {\n                        w: 92,\n                        h: 74\n                    }\n                },\n                spriteRunPositions: [{x: 0, y: 0}, {x: 308, y: 0}],\n                spriteRunSteps: 3,\n                spriteSitPositions: [{x: 0, y: 100}, {x: 279, y: 100}],\n                sizeCorrection: {\n                    top: 0,\n                    left: 0,\n                    right: 0.1,\n                    bottom: 0,\n                },\n            }\n        ],\n\n        obstacles: [\n            {\n                type: \"monster-1\",\n                label: \"Голубой монстр\",\n                weight: 0.5,\n                width: 40,\n                height: 46,\n                altitude: 0,\n                sprite: true,\n                sizeCorrection: {\n                    top: 0.1,\n                    left: 0.1,\n                    right: 0.1,\n                    bottom: 0.1,\n                },\n            },\n            {\n                type: \"monster-2\",\n                label: \"Желтый монстр\",\n                weight: 0.5,\n                width: 45,\n                height: 35,\n                altitude: [10, 60],\n                sprite: true,\n                sizeCorrection: {\n                    top: 0.1,\n                    left: 0.1,\n                    right: 0.1,\n                    bottom: 0.1,\n                },\n            }\n        ],\n\n        environment: {\n            bottom: 0,\n            bgMusic: true,\n            bgNaturalWidth: 785,\n            bgNaturalHeight: 436\n        }\n    },\n\n]\n\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport App from \"./App\"\n\nconst routedApp = <BrowserRouter><App /></BrowserRouter>\nReactDOM.render(\n  <React.StrictMode>\n      {routedApp}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}